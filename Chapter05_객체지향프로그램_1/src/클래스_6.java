/*
 *   1. 관련된 데이터 묶어 저장
 *      ----------
 *      |다른 데이터형도 묶어 저장 가능
 *      |공통 사용 여부(static), 따로 저장 여부(instance)
 *   2. 배열<클래스형 더 많이 사용
 *   3. 일반 데이터형과 동일하게 사용 => 사용자 정의 데이터형
 *   4. 접근시 =>
 *   ex) Student std=new Student()
 *       ------- --- --- ------- 변수 초기화하는 함수 => 생성자
 *       데이터형  객체 동적메모리할당
 *       => 변수 접근 방식
 *          : 인스턴스 변수: 객체명.변수명
 *            -------개인마다 저장
 *          : static 변수: 클래스명.변수명 / 객체명.변수명
 *           --------한 개의 공간에 공유 저장 / 싱글턴(클래스 객체를 한 번만 사용)
 *           *** 특별한 경우가 아니면 static 변수는 거의 없다
 *       => 객체 지향 프로그램은 클래스와 클래스 간의 연관관계를 가짐
 *         => 다른 클래스에서 변수/메소드 이용
 */
public class 클래스_6 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
