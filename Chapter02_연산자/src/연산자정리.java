/*
 *    데이터저장(변수) => 요청 처리 => 화면 출력
 *                   연산자/제어문
 *    
 *    단항연산자
 *     - 증감연산자/ 형번환연산자/ 부정연산자
 *       ++, --   실수=>정수   => 조건문 / 반복문 조건 => 제어문
 *                (데이터형)변수|값  !(boolean으로 사용 가능)
 *                => 크기 순서        !true => false / !false => true
 *                  <=======강제형변환    자동형변환======>
 *                byte < short < int < long < float < double
 *                       char
 *                변수 -> 작은 데이터는 저장이 가능
 *                long a=10;
 *                       --
 *                       int 데이터 -> 자동으로 long으로 변경
 *                int a='A'-> int 데이터형
 *                ** 큰데이터는 첨부가 불가능
 *                int a=10.0 -> 오류발생
 *                ** float/double -> f/F
 *                   int/lond -> l/L
 *                   형변환 => 클래스형변환
 *                   
 *    이항연산자
 *     - 산술연산자(+, -, *, /, %)
 *        ** 산술규칙
 *        1) 같은 데이터형만 연산이 가능
 *           long + int => int가 long으로 자동형변환 => long + long
 *           'A' + 10
 *           ===
 *           65 + 10 = 75
 *        2) int이하 데이터형을 연산 => 결과값이 int로 나옴
 *           ======= byte / short / char(같은 데이터형이더라도 다 int로 변환)
 *        3) char는 연산시 자동으로 정수형으로 변경 후 처리
 *        ** 연산처리
 *           + : 더하기, 문자열 결합
 *                     5+"5" = "55"
 *                     "5"+5 = "55"
 *           / : 0으로 나눌 수 없다 => 오류 발생
 *               정수/정수=정수 5/2=2
 *           % : 나머지
 *               부호는 왼쪽 부호를 따라간다
 *               -5%2=-1
 *               -5%-2=-1
 *          *** 가장 많이 사용되는 연산자(합 / 평균)
 *              => 웹프로그램: 로직이 없다, 흐름 읽기
 *     ========================================= 조건문/반복문 => 결과값: true/false
 *     비교연산자
 *       문자열은 비교할 수 없다 / 문자, 숫자, 논리 비교 가능
 *       왼쪽 기준
 *       == : 같다
 *       != : 같지 않다
 *       < : 작다
 *       > : 크다          
 *       <= : 작거나 같다 : < || ==
 *       >= : 크거나 같다 : > || ==
 *       
 *       'A'=='a' ==> 65==97 ==> false
 *       => if(부정연산자/비교연산자/논리연산자) => 조건
 *       => 현재는 평문 배우고 있음
 *       => 조건문: 필요시 사용, 불필요시 건너뛰기
 *       => 반복문: 반복 수행, 게임
 *     ==========================================
 *     논리연산자
 *       && => 범위 포함 (기간) => 조건 두 개가 모두 true일 때만 true
 *       char a='B';
 *       a>='A' && a<='Z'
 *       *** && 앞에 있는 조건이 false일 경우 뒤 조건은 처리하지 않음 => 효율적인 연산
 *       
 *       || => 범위 밖에 있는 경우 => 조건 중 한 개이상의 true가 있으면 true
 *       int score;
 *       score<0 || score>100 => 다시 입력하시오
 *       *** || 앞에 있는 조건이 true일 경우 뒤 조건은 처리하지 않음 => 효율적인 연산
 */
// 점수 => random => 60이상 짝수
public class 연산자정리 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int score=(int)(Math.random()*101);
		//0~100
		System.out.println("score:"+score);
		
		boolean bCheck=score>=60 && score%2==0;
		System.out.println("bCheck="+bCheck);
		
		char sex='W';
		int jumsu=87;
		
		bCheck=(sex=='W'||jumsu%2==0);
		System.out.println(bCheck);

	}

}
